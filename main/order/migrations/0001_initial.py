# Generated by Django 2.2.7 on 2020-08-24 10:47

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.order.models.company


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=155, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('body', models.TextField(blank=True, verbose_name='About Branch')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=155, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=155, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('body', models.TextField(blank=True, verbose_name='About Company')),
                ('logo', models.ImageField(blank=True, default='/media/companies/company.png', upload_to=main.order.models.company._handle_site_logo, verbose_name='Logo')),
                ('size', models.CharField(choices=[('small', 'Small 0-10'), ('middle', 'Middle 10-50'), ('large', 'Large 50-200'), ('big', 'Big 200-more')], default='small', max_length=55, verbose_name='Company Size')),
                ('category', models.CharField(choices=[('restaurant', 'Restaurant'), ('hotel', 'Hotel'), ('supermarket', 'Supermarket'), ('bakery', 'Bakery'), ('greengrocer', 'Greengrocer'), ('speciality', 'Speciality')], default='restaurant', max_length=55, verbose_name='Category')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('left', models.PositiveIntegerField(default=0, verbose_name='Product Left')),
                ('count', models.PositiveIntegerField(default=5, verbose_name='Product Count')),
                ('original_price', models.FloatField(default=10.0, verbose_name='Original Price')),
                ('price', models.FloatField(default=5.0, verbose_name='Price')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('sold_time', models.TimeField(verbose_name='Sold Time')),
                ('status', models.CharField(choices=[('active', 'Active'), ('draft', 'Draft')], default='draft', max_length=55, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Branch', verbose_name='Branch')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('count', models.PositiveIntegerField(default=1, help_text='Number of product item that consumer bought', verbose_name='Item Count')),
                ('original_price', models.FloatField(default=10.0, verbose_name='Original Price')),
                ('price', models.FloatField(default=5.0, verbose_name='Price')),
                ('total_price', models.FloatField(default=5.0, help_text='Total Price that paid, it is represet price x count = total', verbose_name='Price')),
                ('payment_id', models.CharField(blank=True, max_length=155, null=True, verbose_name='Payment ID')),
                ('holder', models.CharField(blank=True, max_length=120, null=True, verbose_name='Card Holder Name')),
                ('has_paid', models.BooleanField(default=False, verbose_name='Has Paid')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Currency', verbose_name='Currency')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.Product', verbose_name='Product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Consumer')),
            ],
            options={
                'verbose_name': 'Receipt',
                'verbose_name_plural': 'Receipts',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ProductTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('image', models.ImageField(blank=True, default='/media/products/product.png', upload_to='products', verbose_name='Product')),
                ('body', models.TextField(blank=True, verbose_name='Description')),
                ('left', models.PositiveIntegerField(default=0, verbose_name='Product Left')),
                ('count', models.PositiveIntegerField(default=5, verbose_name='Product Count')),
                ('original_price', models.FloatField(default=10.0, verbose_name='Original Price')),
                ('price', models.FloatField(default=5.0, verbose_name='Price')),
                ('currency', models.CharField(choices=[('USD', 'United States Dollar (USD)'), ('EUR', 'Euro (EUR)'), ('TRY', 'Turkish Lira (TRY)')], default='try', max_length=100, verbose_name='Currency')),
                ('status', models.CharField(choices=[('published', 'Published'), ('soldout', 'Soldout'), ('passive', 'Passive'), ('draft', 'Draft')], default='draft', max_length=55, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.Category', verbose_name='Category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Company', verbose_name='Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Publisher')),
            ],
            options={
                'verbose_name': 'Product Template',
                'verbose_name_plural': 'Product Templates',
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.ProductTemplate', verbose_name='Product Template'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Publisher'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(max_length=55, verbose_name='Address')),
                ('city', models.CharField(max_length=55, verbose_name='City')),
                ('state', models.CharField(max_length=55, verbose_name='State')),
                ('country', models.CharField(max_length=55, verbose_name='Country')),
                ('zipcode', models.CharField(max_length=55, verbose_name='Zipcode')),
                ('lati', models.FloatField(default=0.0, verbose_name='Latitude')),
                ('lngt', models.FloatField(default=0.0, verbose_name='Longitude')),
                ('mob', models.CharField(max_length=15, verbose_name='Mobile')),
                ('tel', models.CharField(max_length=15, verbose_name='Telephone')),
                ('fax', models.CharField(max_length=15, verbose_name='Fax')),
                ('url', models.CharField(max_length=155, verbose_name='Website')),
                ('mail', models.CharField(max_length=155, verbose_name='Mail')),
                ('tax_id', models.CharField(max_length=25, verbose_name='TAX ID')),
                ('tax_branch', models.CharField(max_length=25, verbose_name='TAX Branch')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('rate', models.PositiveIntegerField(verbose_name='Rate')),
                ('body', models.TextField(verbose_name='Message')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Product', verbose_name='Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Consumer')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='company',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.Location', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='order.Comment')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='order.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='branch',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.Location', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='branch',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Manager'),
        ),
    ]
